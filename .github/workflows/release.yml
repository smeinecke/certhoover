name: Release binaries

on:
  push:
    tags:
      - 'v*.*.*' # Only run for version tags like v1.2.3
  workflow_dispatch:

jobs:
  build-binaries:
    name: Build binaries for release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            suffix: amd64
          - target: aarch64-unknown-linux-gnu
            suffix: arm64
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - name: Install aarch64 cross-compiler and OpenSSL for cross
        if: matrix.suffix == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libssl-dev:arm64 pkg-config
      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: ${{ matrix.target == 'aarch64-unknown-linux-gnu' && 'aarch64-linux-gnu-gcc' || '' }}
      - name: Rename binary with platform suffix
        run: mv target/${{ matrix.target }}/release/certhoover target/${{ matrix.target }}/release/certhoover-${{ matrix.suffix }}
      - name: Upload Release Asset
        if: github.ref_type == 'tag'
        uses: softprops/action-gh-release@v2
        with:
          files: target/${{ matrix.target }}/release/certhoover-${{ matrix.suffix }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifact
        if: github.ref_type != 'tag'
        uses: actions/upload-artifact@v4
        with:
          name: certhoover-${{ matrix.suffix }}
          path: target/${{ matrix.target }}/release/certhoover-${{ matrix.suffix }}
